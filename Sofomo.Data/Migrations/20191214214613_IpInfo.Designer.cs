// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sofomo.Data;

namespace Sofomo.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191214214613_IpInfo")]
    partial class IpInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sofomo.Models.IpInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("ContinentCode");

                    b.Property<string>("ContinentName");

                    b.Property<string>("CountryCode");

                    b.Property<string>("CountryName");

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("Ip");

                    b.Property<string>("IpV4");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("RegionCode");

                    b.Property<string>("RegionName");

                    b.Property<string>("SearchAddress");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.ToTable("IpInfos");
                });

            modelBuilder.Entity("Sofomo.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<int>("LocationId");

                    b.Property<string>("Name");

                    b.Property<string>("Native");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Sofomo.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CallingCode");

                    b.Property<string>("Capital");

                    b.Property<string>("CountryFlag");

                    b.Property<string>("CountryFlagEmoji");

                    b.Property<string>("CountryFlagEmojiUnicode");

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("GeoNameId");

                    b.Property<int>("IpInfoId");

                    b.Property<bool>("IsEu");

                    b.HasKey("Id");

                    b.HasIndex("IpInfoId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Sofomo.Models.Language", b =>
                {
                    b.HasOne("Sofomo.Models.Location", "Location")
                        .WithMany("Languages")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sofomo.Models.Location", b =>
                {
                    b.HasOne("Sofomo.Models.IpInfo", "IpInfo")
                        .WithOne("Location")
                        .HasForeignKey("Sofomo.Models.Location", "IpInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
